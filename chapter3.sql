/*

SELECT ENAME, DEPTNO
FROM EMP
WHERE DEPTNO IN (10)

UNION ALL

SELECT "-----", "------"

UNION ALL

SELECT DNAME, DEPTNO
FROM DEPT
;

SELECT EMP.ENAME, DEPT.LOC
FROM EMP, DEPT
WHERE EMP.DEPTNO IN (10)
    AND DEPT.DEPTNO = EMP.DEPTNO
;

SELECT EMP.ENAME, DEPT.LOC
FROM EMP
INNER JOIN DEPT
ON DEPT.DEPTNO = EMP.DEPTNO
WHERE EMP.DEPTNO IN (10)
;
-- 3.3
CREATE VIEW V
AS
SELECT ENAME, JOB, SAL
FROM EMP
WHERE JOB = "CLERK"
;

SELECT * FROM V;

SELECT V.ENAME, V.JOB, V.SAL, E.EMPNO, E.MGR, E.HIREDATE, E.COMM, E.DEPTNO
FROM V
JOIN EMP E
ON (
    E.ENAME = V.ENAME
    AND E.JOB = V.JOB
    AND E.SAL = V.SAL
    )
;

-- 3.4
SELECT * FROM DEPT
;
SELECT "----"
;
SELECT DEPTNO FROM EMP
;

SELECT DISTINCT DEPTNO FROM EMP;


SELECT DEPTNO 
FROM DEPT
WHERE DEPTNO NOT IN (20)
;

SELECT DEPTNO 
FROM DEPT
WHERE DEPTNO NOT IN (SELECT 20)
;

SELECT DEPTNO 
FROM DEPT
WHERE DEPTNO NOT IN (
    SELECT DISTINCT DEPTNO FROM EMP
    )
;

-- UNEXPECTED RESULTS MAY BE RECEIVED IF DEPNO COLUMN HAS NULLS,
-- DUE OT WAY 'IN' AND 'NOT IN' WORK.
-- EXAMPLE THAT DOESN'T HAVE PROBLEM IF DEPTNO COLUMN HAS NULLS
-- (NOTE: USES CORRELATED SUBQUERY)
SELECT DEPT.DEPTNO
FROM DEPT
WHERE NOT EXISTS (
    SELECT 1 FROM EMP
    WHERE DEPT.DEPTNO = EMP.DEPTNO
)
;

SELECT DEPT.DEPTNO AS ALL_DEPTS
FROM DEPT
;

SELECT EMP.DEPTNO FROM EMP WHERE EMP.DEPTNO = 10
;
SELECT EMP.DEPTNO FROM EMP WHERE EMP.DEPTNO = 20
;
SELECT EMP.DEPTNO FROM EMP WHERE EMP.DEPTNO = 30
;
SELECT EMP.DEPTNO FROM EMP WHERE EMP.DEPTNO = 40
;

SELECT 1 AS 10_EXISTS FROM EMP WHERE EMP.DEPTNO = 10
;
SELECT 1 AS 20_EXISTS FROM EMP WHERE EMP.DEPTNO = 20
;
SELECT 1 AS 30_EXISTS FROM EMP WHERE EMP.DEPTNO = 30
;
SELECT 1 AS 40_EXISTS FROM EMP WHERE EMP.DEPTNO = 40
;

-- 3.5
SELECT DEPT.*, EMP.ENAME, EMP.DEPTNO AS EMP_DEPTNO FROM DEPT 
LEFT OUTER JOIN EMP
ON (DEPT.DEPTNO = EMP.DEPTNO)
;

SELECT DEPT.*, EMP.ENAME, EMP.DEPTNO AS EMP_DEPTNO FROM DEPT 
LEFT OUTER JOIN EMP
ON (DEPT.DEPTNO = EMP.DEPTNO)
WHERE EMP.DEPTNO IS NULL
;

SELECT DEPT.* FROM DEPT 
LEFT OUTER JOIN EMP
ON (DEPT.DEPTNO = EMP.DEPTNO)
WHERE EMP.DEPTNO IS NULL
;
*/
-- 3.6
-- SELECT * FROM EMP_BONUS
-- ;
-- SHOW COLUMNS FROM EMP;
-- SHOW COLUMNS FROM DEPT;
-- SHOW COLUMNS FROM EMP_BONUS;

SELECT EMP.ENAME, DEPT.LOC, EMP_BONUS.RECEIVED
FROM EMP
LEFT JOIN DEPT
ON EMP.DEPTNO = DEPT.DEPTNO
LEFT JOIN EMP_BONUS
ON EMP.EMPNO = EMP_BONUS.EMPNO
ORDER BY DEPT.LOC, EMP.ENAME
;

-- SAME RESULTS THROUGH USE OF SCALAR SUBQUERY
SELECT EMP.ENAME, DEPT.LOC,
(
    SELECT EMP_BONUS.RECEIVED FROM EMP_BONUS
    WHERE EMP_BONUS.EMPNO = EMP.EMPNO
) AS RECEIVED
FROM EMP, DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO
ORDER BY DEPT.LOC, EMP.ENAME
;