-- Chapter 6, Working with Numbers

-- /Users/jasondixon/Dropbox/Projects/SQL_Cookbook/chapter7.sql

/*
-- 7.1


SELECT AVG(SAL) AS AVERAGE_EMPLOYEE_SALARY
FROM EMP
;

SELECT DEPTNO, AVG(SAL) AS AVERAGE_SAL_PER_DEPT
FROM EMP
GROUP BY DEPTNO
;

-- NOTE: Need to use coalesce to convert nulls if any records could have them

SELECT AVG(SAL) AS AVERAGE_SAL_PER_DEPT
FROM EMP
GROUP BY DEPTNO
;


-- 7.6, generating a running total

SELECT E.ENAME, E.SAL,
(SELECT SUM(D.SAL) FROM EMP D
WHERE D.EMPNO <= E.EMPNO) as running_total FROM EMP E
ORDER BY 3
;

-- DOES THIS WORK IF YOU LEAVE OUT THE 'ORDER BY' STATEMENT?
SELECT E.ENAME, E.SAL,
(SELECT SUM(D.SAL) FROM EMP D
WHERE D.EMPNO <= E.EMPNO) as running_total FROM EMP E
-- ORDER BY 3
;

-- YES, THAT WORKED. UNCLEAR WHY ORDER BY IS NEEDED IN SOLUTION.
-- MAYBE IT WOULD NOT HAVE WORKED IF EMPNO WAS NOT ALREADY SEQUENTIAL IN TABLE
-- (I.E., IF EMPNO WASN'T ALREADY ORDERED)

*/


SELECT E.ENAME, E.SAL,
(SELECT SUM(D.SAL) FROM EMP D
WHERE D.EMPNO <= E.EMPNO) as running_total FROM EMP E
ORDER BY 3
;
